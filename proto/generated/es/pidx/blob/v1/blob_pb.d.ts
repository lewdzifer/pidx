// @generated by protoc-gen-es v2.2.5
// @generated from file pidx/blob/v1/blob.proto (package pidx.blob.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Hashes } from "./hashes_pb";

/**
 * Describes the file pidx/blob/v1/blob.proto.
 */
export declare const file_pidx_blob_v1_blob: GenFile;

/**
 * Blob represents information about a blob, i.e. a binary object of any kind.
 * It contains metadata such as a unique identifier, size, media type, and cryptographic hashes.
 * Blobs are used to store and reference binary data, such as files, images, or other media.
 *
 * @generated from message pidx.blob.v1.Blob
 */
export declare type Blob = Message<"pidx.blob.v1.Blob"> & {
  /**
   * The unique identifier for the blob.
   * This must be a non-empty string and is typically assigned by the server.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The size of the blob in bytes.
   * This value represents the total number of bytes in the blob's content.
   *
   * @generated from field: uint64 size_bytes = 2;
   */
  sizeBytes: bigint;

  /**
   * The media (MIME) type of the blob.
   * This describes the format of the blob's content (e.g., "image/png", "application/pdf").
   *
   * @generated from field: string media_type = 3;
   */
  mediaType: string;

  /**
   * The cryptographic hashes of the blob.
   * These hashes can be used for integrity verification, deduplication, and fast identification.
   *
   * @generated from field: pidx.blob.v1.Hashes hashes = 4;
   */
  hashes?: Hashes;
};

/**
 * Describes the message pidx.blob.v1.Blob.
 * Use `create(BlobSchema)` to create a new message.
 */
export declare const BlobSchema: GenMessage<Blob>;

