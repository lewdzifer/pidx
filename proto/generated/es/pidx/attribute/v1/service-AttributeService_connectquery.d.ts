// @generated by protoc-gen-connect-query v2.0.1
// @generated from file pidx/attribute/v1/service.proto (package pidx.attribute.v1, syntax proto3)
/* eslint-disable */

import { AttributeService } from "./service_pb";

/**
 * CreateAttribute creates a new attribute definition.
 * The provided attribute must not have an id set; the server will assign one.
 *
 * @generated from rpc pidx.attribute.v1.AttributeService.CreateAttribute
 */
export const createAttribute: typeof AttributeService["method"]["createAttribute"];
/**
 * GetAttribute retrieves an attribute definition by its unique id.
 * Returns NOT_FOUND if the attribute does not exist.
 *
 * @generated from rpc pidx.attribute.v1.AttributeService.GetAttribute
 */
export const getAttribute: typeof AttributeService["method"]["getAttribute"];
/**
 * UpdateAttribute updates an existing attribute definition.
 * Only the fields specified in the update_mask will be updated.
 *
 * @generated from rpc pidx.attribute.v1.AttributeService.UpdateAttribute
 */
export const updateAttribute: typeof AttributeService["method"]["updateAttribute"];
/**
 * DeleteAttribute deletes an attribute definition by its unique id.
 * Returns the deleted attribute in the response.
 *
 * @generated from rpc pidx.attribute.v1.AttributeService.DeleteAttribute
 */
export const deleteAttribute: typeof AttributeService["method"]["deleteAttribute"];
/**
 * GetAttributeAssignments retrieves all assignments for a given attribute id.
 * Returns a list of all entities to which the attribute is assigned.
 *
 * @generated from rpc pidx.attribute.v1.AttributeService.GetAttributeAssignments
 */
export const getAttributeAssignments: typeof AttributeService["method"]["getAttributeAssignments"];
/**
 * CreateAttributeAssignment creates a new assignment of an attribute to an entity.
 * If the given entity already has an assignment for the attribute, it will be replaced.
 *
 * @generated from rpc pidx.attribute.v1.AttributeService.CreateAttributeAssignment
 */
export const createAttributeAssignment: typeof AttributeService["method"]["createAttributeAssignment"];
/**
 * DeleteAttributeAssignment deletes an attribute assignment by its unique id.
 * Returns the deleted assignment in the response.
 *
 * @generated from rpc pidx.attribute.v1.AttributeService.DeleteAttributeAssignment
 */
export const deleteAttributeAssignment: typeof AttributeService["method"]["deleteAttributeAssignment"];
