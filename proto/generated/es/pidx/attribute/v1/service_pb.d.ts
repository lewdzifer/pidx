// @generated by protoc-gen-es v2.2.5
// @generated from file pidx/attribute/v1/service.proto (package pidx.attribute.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Attribute, AttributeAssignment } from "./attribute_pb";
import type { FieldMask } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file pidx/attribute/v1/service.proto.
 */
export declare const file_pidx_attribute_v1_service: GenFile;

/**
 * / Request message for creating a new attribute definition.
 *
 * @generated from message pidx.attribute.v1.CreateAttributeRequest
 */
export declare type CreateAttributeRequest = Message<"pidx.attribute.v1.CreateAttributeRequest"> & {
  /**
   * / The attribute definition to create. The id field must be unset.
   *
   * @generated from field: pidx.attribute.v1.Attribute attribute = 1;
   */
  attribute?: Attribute;
};

/**
 * Describes the message pidx.attribute.v1.CreateAttributeRequest.
 * Use `create(CreateAttributeRequestSchema)` to create a new message.
 */
export declare const CreateAttributeRequestSchema: GenMessage<CreateAttributeRequest>;

/**
 * / Response message for CreateAttribute.
 *
 * @generated from message pidx.attribute.v1.CreateAttributeResponse
 */
export declare type CreateAttributeResponse = Message<"pidx.attribute.v1.CreateAttributeResponse"> & {
  /**
   * / The created attribute definition, including its assigned id.
   *
   * @generated from field: pidx.attribute.v1.Attribute attribute = 1;
   */
  attribute?: Attribute;
};

/**
 * Describes the message pidx.attribute.v1.CreateAttributeResponse.
 * Use `create(CreateAttributeResponseSchema)` to create a new message.
 */
export declare const CreateAttributeResponseSchema: GenMessage<CreateAttributeResponse>;

/**
 * / Request message for retrieving an attribute definition by id.
 *
 * @generated from message pidx.attribute.v1.GetAttributeRequest
 */
export declare type GetAttributeRequest = Message<"pidx.attribute.v1.GetAttributeRequest"> & {
  /**
   * / The unique id of the attribute to retrieve.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message pidx.attribute.v1.GetAttributeRequest.
 * Use `create(GetAttributeRequestSchema)` to create a new message.
 */
export declare const GetAttributeRequestSchema: GenMessage<GetAttributeRequest>;

/**
 * / Response message for GetAttribute.
 *
 * @generated from message pidx.attribute.v1.GetAttributeResponse
 */
export declare type GetAttributeResponse = Message<"pidx.attribute.v1.GetAttributeResponse"> & {
  /**
   * / The requested attribute definition.
   *
   * @generated from field: pidx.attribute.v1.Attribute attribute = 1;
   */
  attribute?: Attribute;
};

/**
 * Describes the message pidx.attribute.v1.GetAttributeResponse.
 * Use `create(GetAttributeResponseSchema)` to create a new message.
 */
export declare const GetAttributeResponseSchema: GenMessage<GetAttributeResponse>;

/**
 * / Request message for updating an attribute definition.
 *
 * @generated from message pidx.attribute.v1.UpdateAttributeRequest
 */
export declare type UpdateAttributeRequest = Message<"pidx.attribute.v1.UpdateAttributeRequest"> & {
  /**
   * / The attribute definition with updated fields. The id must be set.
   *
   * @generated from field: pidx.attribute.v1.Attribute attribute = 1;
   */
  attribute?: Attribute;

  /**
   * / The fields to update. If not set, all updatable fields will be updated.
   *
   * @generated from field: optional google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message pidx.attribute.v1.UpdateAttributeRequest.
 * Use `create(UpdateAttributeRequestSchema)` to create a new message.
 */
export declare const UpdateAttributeRequestSchema: GenMessage<UpdateAttributeRequest>;

/**
 * / Response message for UpdateAttribute.
 *
 * @generated from message pidx.attribute.v1.UpdateAttributeResponse
 */
export declare type UpdateAttributeResponse = Message<"pidx.attribute.v1.UpdateAttributeResponse"> & {
  /**
   * / The updated attribute definition.
   *
   * @generated from field: pidx.attribute.v1.Attribute attribute = 1;
   */
  attribute?: Attribute;
};

/**
 * Describes the message pidx.attribute.v1.UpdateAttributeResponse.
 * Use `create(UpdateAttributeResponseSchema)` to create a new message.
 */
export declare const UpdateAttributeResponseSchema: GenMessage<UpdateAttributeResponse>;

/**
 * / Request message for deleting an attribute definition.
 *
 * @generated from message pidx.attribute.v1.DeleteAttributeRequest
 */
export declare type DeleteAttributeRequest = Message<"pidx.attribute.v1.DeleteAttributeRequest"> & {
  /**
   * / The unique id of the attribute to delete.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message pidx.attribute.v1.DeleteAttributeRequest.
 * Use `create(DeleteAttributeRequestSchema)` to create a new message.
 */
export declare const DeleteAttributeRequestSchema: GenMessage<DeleteAttributeRequest>;

/**
 * / Response message for DeleteAttribute.
 *
 * @generated from message pidx.attribute.v1.DeleteAttributeResponse
 */
export declare type DeleteAttributeResponse = Message<"pidx.attribute.v1.DeleteAttributeResponse"> & {
  /**
   * / The deleted attribute definition.
   *
   * @generated from field: pidx.attribute.v1.Attribute attribute = 1;
   */
  attribute?: Attribute;
};

/**
 * Describes the message pidx.attribute.v1.DeleteAttributeResponse.
 * Use `create(DeleteAttributeResponseSchema)` to create a new message.
 */
export declare const DeleteAttributeResponseSchema: GenMessage<DeleteAttributeResponse>;

/**
 * / Request message for retrieving all assignments for a given attribute.
 *
 * @generated from message pidx.attribute.v1.GetAttributeAssignmentsRequest
 */
export declare type GetAttributeAssignmentsRequest = Message<"pidx.attribute.v1.GetAttributeAssignmentsRequest"> & {
  /**
   * / The unique id of the attribute whose assignments are to be listed.
   *
   * @generated from field: string attribute_id = 1;
   */
  attributeId: string;
};

/**
 * Describes the message pidx.attribute.v1.GetAttributeAssignmentsRequest.
 * Use `create(GetAttributeAssignmentsRequestSchema)` to create a new message.
 */
export declare const GetAttributeAssignmentsRequestSchema: GenMessage<GetAttributeAssignmentsRequest>;

/**
 * / Response message for GetAttributeAssignments.
 *
 * @generated from message pidx.attribute.v1.GetAttributeAssignmentsResponse
 */
export declare type GetAttributeAssignmentsResponse = Message<"pidx.attribute.v1.GetAttributeAssignmentsResponse"> & {
  /**
   * / The list of assignments for the specified attribute.
   *
   * @generated from field: repeated pidx.attribute.v1.AttributeAssignment assignments = 1;
   */
  assignments: AttributeAssignment[];
};

/**
 * Describes the message pidx.attribute.v1.GetAttributeAssignmentsResponse.
 * Use `create(GetAttributeAssignmentsResponseSchema)` to create a new message.
 */
export declare const GetAttributeAssignmentsResponseSchema: GenMessage<GetAttributeAssignmentsResponse>;

/**
 * / Request message for creating a new attribute assignment.
 *
 * @generated from message pidx.attribute.v1.CreateAttributeAssignmentRequest
 */
export declare type CreateAttributeAssignmentRequest = Message<"pidx.attribute.v1.CreateAttributeAssignmentRequest"> & {
  /**
   * / The assignment to create. The id field must be unset.
   *
   * @generated from field: pidx.attribute.v1.AttributeAssignment assignment = 1;
   */
  assignment?: AttributeAssignment;
};

/**
 * Describes the message pidx.attribute.v1.CreateAttributeAssignmentRequest.
 * Use `create(CreateAttributeAssignmentRequestSchema)` to create a new message.
 */
export declare const CreateAttributeAssignmentRequestSchema: GenMessage<CreateAttributeAssignmentRequest>;

/**
 * / Response message for CreateAttributeAssignment.
 *
 * @generated from message pidx.attribute.v1.CreateAttributeAssignmentResponse
 */
export declare type CreateAttributeAssignmentResponse = Message<"pidx.attribute.v1.CreateAttributeAssignmentResponse"> & {
  /**
   * / The created attribute assignment, including its assigned id.
   *
   * @generated from field: pidx.attribute.v1.AttributeAssignment assignment = 1;
   */
  assignment?: AttributeAssignment;
};

/**
 * Describes the message pidx.attribute.v1.CreateAttributeAssignmentResponse.
 * Use `create(CreateAttributeAssignmentResponseSchema)` to create a new message.
 */
export declare const CreateAttributeAssignmentResponseSchema: GenMessage<CreateAttributeAssignmentResponse>;

/**
 * / Request message for deleting an attribute assignment.
 *
 * @generated from message pidx.attribute.v1.DeleteAttributeAssignmentRequest
 */
export declare type DeleteAttributeAssignmentRequest = Message<"pidx.attribute.v1.DeleteAttributeAssignmentRequest"> & {
  /**
   * / The unique id of the attribute assignment to delete.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message pidx.attribute.v1.DeleteAttributeAssignmentRequest.
 * Use `create(DeleteAttributeAssignmentRequestSchema)` to create a new message.
 */
export declare const DeleteAttributeAssignmentRequestSchema: GenMessage<DeleteAttributeAssignmentRequest>;

/**
 * / Response message for DeleteAttributeAssignment.
 *
 * @generated from message pidx.attribute.v1.DeleteAttributeAssignmentResponse
 */
export declare type DeleteAttributeAssignmentResponse = Message<"pidx.attribute.v1.DeleteAttributeAssignmentResponse"> & {
  /**
   * / The deleted attribute assignment.
   *
   * @generated from field: pidx.attribute.v1.AttributeAssignment assignment = 1;
   */
  assignment?: AttributeAssignment;
};

/**
 * Describes the message pidx.attribute.v1.DeleteAttributeAssignmentResponse.
 * Use `create(DeleteAttributeAssignmentResponseSchema)` to create a new message.
 */
export declare const DeleteAttributeAssignmentResponseSchema: GenMessage<DeleteAttributeAssignmentResponse>;

/**
 * / AttributeService offers a unified interface for managing both attribute definitions and their assignments to entities.
 * / Clients can create, retrieve, update, and delete attribute definitions, as well as assign or remove attributes from specific entities.
 * / Centralizing assignment management within this service ensures that when an attribute is deleted, all related assignments are automatically and consistently cleaned up.
 * / If assignments were managed within individual entity services, additional coordination would be required to maintain referential integrity upon attribute deletion.
 *
 * @generated from service pidx.attribute.v1.AttributeService
 */
export declare const AttributeService: GenService<{
  /**
   * CreateAttribute creates a new attribute definition.
   * The provided attribute must not have an id set; the server will assign one.
   *
   * @generated from rpc pidx.attribute.v1.AttributeService.CreateAttribute
   */
  createAttribute: {
    methodKind: "unary";
    input: typeof CreateAttributeRequestSchema;
    output: typeof CreateAttributeResponseSchema;
  },
  /**
   * GetAttribute retrieves an attribute definition by its unique id.
   * Returns NOT_FOUND if the attribute does not exist.
   *
   * @generated from rpc pidx.attribute.v1.AttributeService.GetAttribute
   */
  getAttribute: {
    methodKind: "unary";
    input: typeof GetAttributeRequestSchema;
    output: typeof GetAttributeResponseSchema;
  },
  /**
   * UpdateAttribute updates an existing attribute definition.
   * Only the fields specified in the update_mask will be updated.
   *
   * @generated from rpc pidx.attribute.v1.AttributeService.UpdateAttribute
   */
  updateAttribute: {
    methodKind: "unary";
    input: typeof UpdateAttributeRequestSchema;
    output: typeof UpdateAttributeResponseSchema;
  },
  /**
   * DeleteAttribute deletes an attribute definition by its unique id.
   * Returns the deleted attribute in the response.
   *
   * @generated from rpc pidx.attribute.v1.AttributeService.DeleteAttribute
   */
  deleteAttribute: {
    methodKind: "unary";
    input: typeof DeleteAttributeRequestSchema;
    output: typeof DeleteAttributeResponseSchema;
  },
  /**
   * GetAttributeAssignments retrieves all assignments for a given attribute id.
   * Returns a list of all entities to which the attribute is assigned.
   *
   * @generated from rpc pidx.attribute.v1.AttributeService.GetAttributeAssignments
   */
  getAttributeAssignments: {
    methodKind: "unary";
    input: typeof GetAttributeAssignmentsRequestSchema;
    output: typeof GetAttributeAssignmentsResponseSchema;
  },
  /**
   * CreateAttributeAssignment creates a new assignment of an attribute to an entity.
   * If the given entity already has an assignment for the attribute, it will be replaced.
   *
   * @generated from rpc pidx.attribute.v1.AttributeService.CreateAttributeAssignment
   */
  createAttributeAssignment: {
    methodKind: "unary";
    input: typeof CreateAttributeAssignmentRequestSchema;
    output: typeof CreateAttributeAssignmentResponseSchema;
  },
  /**
   * DeleteAttributeAssignment deletes an attribute assignment by its unique id.
   * Returns the deleted assignment in the response.
   *
   * @generated from rpc pidx.attribute.v1.AttributeService.DeleteAttributeAssignment
   */
  deleteAttributeAssignment: {
    methodKind: "unary";
    input: typeof DeleteAttributeAssignmentRequestSchema;
    output: typeof DeleteAttributeAssignmentResponseSchema;
  },
}>;

