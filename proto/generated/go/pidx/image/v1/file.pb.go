// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pidx/image/v1/file.proto

package imagev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// File represents a specific file version of an image, containing metadata about the file's dimensions and content hashes.
type File struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the file.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The unique identifier of the image this file belongs to.
	ImageId string `protobuf:"bytes,2,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// The unique identifier of the blob containing the file's binary data.
	BlobId string `protobuf:"bytes,3,opt,name=blob_id,json=blobId,proto3" json:"blob_id,omitempty"`
	// The width of the image in pixels.
	Width uint64 `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	// The height of the image in pixels.
	Height uint64 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	// The format of the image.
	Format string `protobuf:"bytes,6,opt,name=format,proto3" json:"format,omitempty"`
	// The content hashes for this file.
	Hashes        *Hashes `protobuf:"bytes,7,opt,name=hashes,proto3" json:"hashes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_pidx_image_v1_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_image_v1_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_pidx_image_v1_file_proto_rawDescGZIP(), []int{0}
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *File) GetBlobId() string {
	if x != nil {
		return x.BlobId
	}
	return ""
}

func (x *File) GetWidth() uint64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *File) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *File) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *File) GetHashes() *Hashes {
	if x != nil {
		return x.Hashes
	}
	return nil
}

var File_pidx_image_v1_file_proto protoreflect.FileDescriptor

const file_pidx_image_v1_file_proto_rawDesc = "" +
	"\n" +
	"\x18pidx/image/v1/file.proto\x12\rpidx.image.v1\x1a\x1apidx/image/v1/hashes.proto\"\xbf\x01\n" +
	"\x04File\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bimage_id\x18\x02 \x01(\tR\aimageId\x12\x17\n" +
	"\ablob_id\x18\x03 \x01(\tR\x06blobId\x12\x14\n" +
	"\x05width\x18\x04 \x01(\x04R\x05width\x12\x16\n" +
	"\x06height\x18\x05 \x01(\x04R\x06height\x12\x16\n" +
	"\x06format\x18\x06 \x01(\tR\x06format\x12-\n" +
	"\x06hashes\x18\a \x01(\v2\x15.pidx.image.v1.HashesR\x06hashesB\xb8\x01\n" +
	"\x11com.pidx.image.v1B\tFileProtoP\x01ZBgithub.com/lewdzifer/pidx/proto/generated/go/pidx/image/v1;imagev1\xa2\x02\x03PIX\xaa\x02\rPidx.Image.V1\xca\x02\rPidx\\Image\\V1\xe2\x02\x19Pidx\\Image\\V1\\GPBMetadata\xea\x02\x0fPidx::Image::V1b\x06proto3"

var (
	file_pidx_image_v1_file_proto_rawDescOnce sync.Once
	file_pidx_image_v1_file_proto_rawDescData []byte
)

func file_pidx_image_v1_file_proto_rawDescGZIP() []byte {
	file_pidx_image_v1_file_proto_rawDescOnce.Do(func() {
		file_pidx_image_v1_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pidx_image_v1_file_proto_rawDesc), len(file_pidx_image_v1_file_proto_rawDesc)))
	})
	return file_pidx_image_v1_file_proto_rawDescData
}

var file_pidx_image_v1_file_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pidx_image_v1_file_proto_goTypes = []any{
	(*File)(nil),   // 0: pidx.image.v1.File
	(*Hashes)(nil), // 1: pidx.image.v1.Hashes
}
var file_pidx_image_v1_file_proto_depIdxs = []int32{
	1, // 0: pidx.image.v1.File.hashes:type_name -> pidx.image.v1.Hashes
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pidx_image_v1_file_proto_init() }
func file_pidx_image_v1_file_proto_init() {
	if File_pidx_image_v1_file_proto != nil {
		return
	}
	file_pidx_image_v1_hashes_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pidx_image_v1_file_proto_rawDesc), len(file_pidx_image_v1_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pidx_image_v1_file_proto_goTypes,
		DependencyIndexes: file_pidx_image_v1_file_proto_depIdxs,
		MessageInfos:      file_pidx_image_v1_file_proto_msgTypes,
	}.Build()
	File_pidx_image_v1_file_proto = out.File
	file_pidx_image_v1_file_proto_goTypes = nil
	file_pidx_image_v1_file_proto_depIdxs = nil
}
