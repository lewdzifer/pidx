// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pidx/blob/v1/service.proto

package blobv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetBlobRequest is the request message for retrieving a blob's metadata.
type GetBlobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the blob to retrieve.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlobRequest) Reset() {
	*x = GetBlobRequest{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobRequest) ProtoMessage() {}

func (x *GetBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobRequest.ProtoReflect.Descriptor instead.
func (*GetBlobRequest) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetBlobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetBlobResponse is the response message containing the blob's metadata.
type GetBlobResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The metadata of the requested blob.
	Blob          *Blob `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlobResponse) Reset() {
	*x = GetBlobResponse{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobResponse) ProtoMessage() {}

func (x *GetBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobResponse.ProtoReflect.Descriptor instead.
func (*GetBlobResponse) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetBlobResponse) GetBlob() *Blob {
	if x != nil {
		return x.Blob
	}
	return nil
}

// DownloadBlobRequest is the request message for downloading a blob's content.
type DownloadBlobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the blob to download.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadBlobRequest) Reset() {
	*x = DownloadBlobRequest{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadBlobRequest) ProtoMessage() {}

func (x *DownloadBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadBlobRequest.ProtoReflect.Descriptor instead.
func (*DownloadBlobRequest) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadBlobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DownloadBlobResponse is the streamed response message containing a chunk of the blob's data.
type DownloadBlobResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A chunk of the blob's binary data.
	Chunk         []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadBlobResponse) Reset() {
	*x = DownloadBlobResponse{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadBlobResponse) ProtoMessage() {}

func (x *DownloadBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadBlobResponse.ProtoReflect.Descriptor instead.
func (*DownloadBlobResponse) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadBlobResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

// UploadBlobRequest is the streamed request message for uploading a blob's content.
type UploadBlobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A chunk of the blob's binary data to upload.
	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	// The source of the blob. Must be provided in the first chunk.
	Source        *Source `protobuf:"bytes,2,opt,name=source,proto3,oneof" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadBlobRequest) Reset() {
	*x = UploadBlobRequest{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlobRequest) ProtoMessage() {}

func (x *UploadBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlobRequest.ProtoReflect.Descriptor instead.
func (*UploadBlobRequest) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *UploadBlobRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *UploadBlobRequest) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

// UploadBlobResponse is the response message containing the metadata of the uploaded blob.
type UploadBlobResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The metadata of the uploaded blob.
	Blob          *Blob `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadBlobResponse) Reset() {
	*x = UploadBlobResponse{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlobResponse) ProtoMessage() {}

func (x *UploadBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlobResponse.ProtoReflect.Descriptor instead.
func (*UploadBlobResponse) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *UploadBlobResponse) GetBlob() *Blob {
	if x != nil {
		return x.Blob
	}
	return nil
}

// DeleteBlobDataRequest is the request message for deleting the binary data of a blob.
type DeleteBlobDataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the blob to delete the binary data of.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBlobDataRequest) Reset() {
	*x = DeleteBlobDataRequest{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBlobDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBlobDataRequest) ProtoMessage() {}

func (x *DeleteBlobDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBlobDataRequest.ProtoReflect.Descriptor instead.
func (*DeleteBlobDataRequest) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteBlobDataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DeleteBlobDataResponse is the response message containing the metadata of the deleted blob.
type DeleteBlobDataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The metadata of the deleted blob.
	Blob          *Blob `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBlobDataResponse) Reset() {
	*x = DeleteBlobDataResponse{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBlobDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBlobDataResponse) ProtoMessage() {}

func (x *DeleteBlobDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBlobDataResponse.ProtoReflect.Descriptor instead.
func (*DeleteBlobDataResponse) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteBlobDataResponse) GetBlob() *Blob {
	if x != nil {
		return x.Blob
	}
	return nil
}

// DeleteBlobRequest is the request message for deleting a blob.
type DeleteBlobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the blob to delete.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBlobRequest) Reset() {
	*x = DeleteBlobRequest{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBlobRequest) ProtoMessage() {}

func (x *DeleteBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBlobRequest.ProtoReflect.Descriptor instead.
func (*DeleteBlobRequest) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteBlobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DeleteBlobResponse is the response message containing the metadata of the deleted blob.
type DeleteBlobResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The metadata of the deleted blob.
	Blob          *Blob `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBlobResponse) Reset() {
	*x = DeleteBlobResponse{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBlobResponse) ProtoMessage() {}

func (x *DeleteBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBlobResponse.ProtoReflect.Descriptor instead.
func (*DeleteBlobResponse) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteBlobResponse) GetBlob() *Blob {
	if x != nil {
		return x.Blob
	}
	return nil
}

// AddSourceRequest is the request message for associating a source with a blob.
type AddSourceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the blob to associate the source with.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The source information to add to the blob.
	Source        *Source `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSourceRequest) Reset() {
	*x = AddSourceRequest{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSourceRequest) ProtoMessage() {}

func (x *AddSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSourceRequest.ProtoReflect.Descriptor instead.
func (*AddSourceRequest) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *AddSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddSourceRequest) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

// AddSourceResponse is the response message containing the updated blob metadata.
type AddSourceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The metadata of the blob after adding the source.
	Blob          *Blob `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSourceResponse) Reset() {
	*x = AddSourceResponse{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSourceResponse) ProtoMessage() {}

func (x *AddSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSourceResponse.ProtoReflect.Descriptor instead.
func (*AddSourceResponse) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *AddSourceResponse) GetBlob() *Blob {
	if x != nil {
		return x.Blob
	}
	return nil
}

// RemoveSourceRequest is the request message for disassociating a source from a blob.
type RemoveSourceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the blob to remove the source from.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSourceRequest) Reset() {
	*x = RemoveSourceRequest{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSourceRequest) ProtoMessage() {}

func (x *RemoveSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSourceRequest.ProtoReflect.Descriptor instead.
func (*RemoveSourceRequest) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// RemoveSourceResponse is the response message containing the updated blob metadata.
type RemoveSourceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The metadata of the blob after removing the source.
	Blob          *Blob `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSourceResponse) Reset() {
	*x = RemoveSourceResponse{}
	mi := &file_pidx_blob_v1_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSourceResponse) ProtoMessage() {}

func (x *RemoveSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pidx_blob_v1_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSourceResponse.ProtoReflect.Descriptor instead.
func (*RemoveSourceResponse) Descriptor() ([]byte, []int) {
	return file_pidx_blob_v1_service_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveSourceResponse) GetBlob() *Blob {
	if x != nil {
		return x.Blob
	}
	return nil
}

var File_pidx_blob_v1_service_proto protoreflect.FileDescriptor

const file_pidx_blob_v1_service_proto_rawDesc = "" +
	"\n" +
	"\x1apidx/blob/v1/service.proto\x12\fpidx.blob.v1\x1a\x17pidx/blob/v1/blob.proto\x1a\x19pidx/blob/v1/source.proto\" \n" +
	"\x0eGetBlobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"9\n" +
	"\x0fGetBlobResponse\x12&\n" +
	"\x04blob\x18\x01 \x01(\v2\x12.pidx.blob.v1.BlobR\x04blob\"%\n" +
	"\x13DownloadBlobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\",\n" +
	"\x14DownloadBlobResponse\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\"g\n" +
	"\x11UploadBlobRequest\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\x121\n" +
	"\x06source\x18\x02 \x01(\v2\x14.pidx.blob.v1.SourceH\x00R\x06source\x88\x01\x01B\t\n" +
	"\a_source\"<\n" +
	"\x12UploadBlobResponse\x12&\n" +
	"\x04blob\x18\x01 \x01(\v2\x12.pidx.blob.v1.BlobR\x04blob\"'\n" +
	"\x15DeleteBlobDataRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"@\n" +
	"\x16DeleteBlobDataResponse\x12&\n" +
	"\x04blob\x18\x01 \x01(\v2\x12.pidx.blob.v1.BlobR\x04blob\"#\n" +
	"\x11DeleteBlobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"<\n" +
	"\x12DeleteBlobResponse\x12&\n" +
	"\x04blob\x18\x01 \x01(\v2\x12.pidx.blob.v1.BlobR\x04blob\"P\n" +
	"\x10AddSourceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12,\n" +
	"\x06source\x18\x02 \x01(\v2\x14.pidx.blob.v1.SourceR\x06source\";\n" +
	"\x11AddSourceResponse\x12&\n" +
	"\x04blob\x18\x01 \x01(\v2\x12.pidx.blob.v1.BlobR\x04blob\"%\n" +
	"\x13RemoveSourceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\">\n" +
	"\x14RemoveSourceResponse\x12&\n" +
	"\x04blob\x18\x01 \x01(\v2\x12.pidx.blob.v1.BlobR\x04blob2\xd4\x04\n" +
	"\vBlobService\x12F\n" +
	"\aGetBlob\x12\x1c.pidx.blob.v1.GetBlobRequest\x1a\x1d.pidx.blob.v1.GetBlobResponse\x12W\n" +
	"\fDownloadBlob\x12!.pidx.blob.v1.DownloadBlobRequest\x1a\".pidx.blob.v1.DownloadBlobResponse0\x01\x12Q\n" +
	"\n" +
	"UploadBlob\x12\x1f.pidx.blob.v1.UploadBlobRequest\x1a .pidx.blob.v1.UploadBlobResponse(\x01\x12[\n" +
	"\x0eDeleteBlobData\x12#.pidx.blob.v1.DeleteBlobDataRequest\x1a$.pidx.blob.v1.DeleteBlobDataResponse\x12O\n" +
	"\n" +
	"DeleteBlob\x12\x1f.pidx.blob.v1.DeleteBlobRequest\x1a .pidx.blob.v1.DeleteBlobResponse\x12L\n" +
	"\tAddSource\x12\x1e.pidx.blob.v1.AddSourceRequest\x1a\x1f.pidx.blob.v1.AddSourceResponse\x12U\n" +
	"\fRemoveSource\x12!.pidx.blob.v1.RemoveSourceRequest\x1a\".pidx.blob.v1.RemoveSourceResponseB\xb4\x01\n" +
	"\x10com.pidx.blob.v1B\fServiceProtoP\x01Z@github.com/lewdzifer/pidx/proto/generated/go/pidx/blob/v1;blobv1\xa2\x02\x03PBX\xaa\x02\fPidx.Blob.V1\xca\x02\fPidx\\Blob\\V1\xe2\x02\x18Pidx\\Blob\\V1\\GPBMetadata\xea\x02\x0ePidx::Blob::V1b\x06proto3"

var (
	file_pidx_blob_v1_service_proto_rawDescOnce sync.Once
	file_pidx_blob_v1_service_proto_rawDescData []byte
)

func file_pidx_blob_v1_service_proto_rawDescGZIP() []byte {
	file_pidx_blob_v1_service_proto_rawDescOnce.Do(func() {
		file_pidx_blob_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pidx_blob_v1_service_proto_rawDesc), len(file_pidx_blob_v1_service_proto_rawDesc)))
	})
	return file_pidx_blob_v1_service_proto_rawDescData
}

var file_pidx_blob_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_pidx_blob_v1_service_proto_goTypes = []any{
	(*GetBlobRequest)(nil),         // 0: pidx.blob.v1.GetBlobRequest
	(*GetBlobResponse)(nil),        // 1: pidx.blob.v1.GetBlobResponse
	(*DownloadBlobRequest)(nil),    // 2: pidx.blob.v1.DownloadBlobRequest
	(*DownloadBlobResponse)(nil),   // 3: pidx.blob.v1.DownloadBlobResponse
	(*UploadBlobRequest)(nil),      // 4: pidx.blob.v1.UploadBlobRequest
	(*UploadBlobResponse)(nil),     // 5: pidx.blob.v1.UploadBlobResponse
	(*DeleteBlobDataRequest)(nil),  // 6: pidx.blob.v1.DeleteBlobDataRequest
	(*DeleteBlobDataResponse)(nil), // 7: pidx.blob.v1.DeleteBlobDataResponse
	(*DeleteBlobRequest)(nil),      // 8: pidx.blob.v1.DeleteBlobRequest
	(*DeleteBlobResponse)(nil),     // 9: pidx.blob.v1.DeleteBlobResponse
	(*AddSourceRequest)(nil),       // 10: pidx.blob.v1.AddSourceRequest
	(*AddSourceResponse)(nil),      // 11: pidx.blob.v1.AddSourceResponse
	(*RemoveSourceRequest)(nil),    // 12: pidx.blob.v1.RemoveSourceRequest
	(*RemoveSourceResponse)(nil),   // 13: pidx.blob.v1.RemoveSourceResponse
	(*Blob)(nil),                   // 14: pidx.blob.v1.Blob
	(*Source)(nil),                 // 15: pidx.blob.v1.Source
}
var file_pidx_blob_v1_service_proto_depIdxs = []int32{
	14, // 0: pidx.blob.v1.GetBlobResponse.blob:type_name -> pidx.blob.v1.Blob
	15, // 1: pidx.blob.v1.UploadBlobRequest.source:type_name -> pidx.blob.v1.Source
	14, // 2: pidx.blob.v1.UploadBlobResponse.blob:type_name -> pidx.blob.v1.Blob
	14, // 3: pidx.blob.v1.DeleteBlobDataResponse.blob:type_name -> pidx.blob.v1.Blob
	14, // 4: pidx.blob.v1.DeleteBlobResponse.blob:type_name -> pidx.blob.v1.Blob
	15, // 5: pidx.blob.v1.AddSourceRequest.source:type_name -> pidx.blob.v1.Source
	14, // 6: pidx.blob.v1.AddSourceResponse.blob:type_name -> pidx.blob.v1.Blob
	14, // 7: pidx.blob.v1.RemoveSourceResponse.blob:type_name -> pidx.blob.v1.Blob
	0,  // 8: pidx.blob.v1.BlobService.GetBlob:input_type -> pidx.blob.v1.GetBlobRequest
	2,  // 9: pidx.blob.v1.BlobService.DownloadBlob:input_type -> pidx.blob.v1.DownloadBlobRequest
	4,  // 10: pidx.blob.v1.BlobService.UploadBlob:input_type -> pidx.blob.v1.UploadBlobRequest
	6,  // 11: pidx.blob.v1.BlobService.DeleteBlobData:input_type -> pidx.blob.v1.DeleteBlobDataRequest
	8,  // 12: pidx.blob.v1.BlobService.DeleteBlob:input_type -> pidx.blob.v1.DeleteBlobRequest
	10, // 13: pidx.blob.v1.BlobService.AddSource:input_type -> pidx.blob.v1.AddSourceRequest
	12, // 14: pidx.blob.v1.BlobService.RemoveSource:input_type -> pidx.blob.v1.RemoveSourceRequest
	1,  // 15: pidx.blob.v1.BlobService.GetBlob:output_type -> pidx.blob.v1.GetBlobResponse
	3,  // 16: pidx.blob.v1.BlobService.DownloadBlob:output_type -> pidx.blob.v1.DownloadBlobResponse
	5,  // 17: pidx.blob.v1.BlobService.UploadBlob:output_type -> pidx.blob.v1.UploadBlobResponse
	7,  // 18: pidx.blob.v1.BlobService.DeleteBlobData:output_type -> pidx.blob.v1.DeleteBlobDataResponse
	9,  // 19: pidx.blob.v1.BlobService.DeleteBlob:output_type -> pidx.blob.v1.DeleteBlobResponse
	11, // 20: pidx.blob.v1.BlobService.AddSource:output_type -> pidx.blob.v1.AddSourceResponse
	13, // 21: pidx.blob.v1.BlobService.RemoveSource:output_type -> pidx.blob.v1.RemoveSourceResponse
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_pidx_blob_v1_service_proto_init() }
func file_pidx_blob_v1_service_proto_init() {
	if File_pidx_blob_v1_service_proto != nil {
		return
	}
	file_pidx_blob_v1_blob_proto_init()
	file_pidx_blob_v1_source_proto_init()
	file_pidx_blob_v1_service_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pidx_blob_v1_service_proto_rawDesc), len(file_pidx_blob_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pidx_blob_v1_service_proto_goTypes,
		DependencyIndexes: file_pidx_blob_v1_service_proto_depIdxs,
		MessageInfos:      file_pidx_blob_v1_service_proto_msgTypes,
	}.Build()
	File_pidx_blob_v1_service_proto = out.File
	file_pidx_blob_v1_service_proto_goTypes = nil
	file_pidx_blob_v1_service_proto_depIdxs = nil
}
